---
- hosts: "localhost"
  gather_facts: false
  collections:
    - hpe.nimble
  vars_files: 'properties/storage_system_properties.yml'

  vars:
    # we should always use python3
    ansible_python_interpreter: /usr/bin/python3
    #state: "create"
    name: "draft"
    route: [
        {
            "gateway": "127.0.0.1",
            "tgt_network": "0.0.0.0",
            "tgt_netmask": "0.0.0.0"
        }
    ]
    subnet: [
        {
            "label": "subnet1",
            "network": "127.0.0.0",
            "netmask": "255.0.0.0",
            "type": "mgmt",
            "allow_iscsi": False,
            "allow_group": False,
            "netzone_type": "single",
            "discovery_ip": "127.0.0.102",
            "mtu": 1500,
            "vlan_id": 0
        }
    ]
    array: [
        {
            "name": "ansibler1-va",
            "ctrlr_a_support_ip": "10.18.171.132",
            "ctrlr_b_support_ip": "10.18.171.133",
            "nic_list": [
                {
                    "name": "eth3",
                    "subnet_label": "data1",
                    "data_ip": "172.16.41.139",
                    "tagged": True
                }
            ]
        },
        {
            "name": "ansibler1-va",
            "ctrlr_a_support_ip": "10.18.171.132",
            "ctrlr_b_support_ip": "10.18.171.133",
            "nic_list": [
                {
                    "name": "eth1",
                    "subnet_label": "mgmt-data",
                    "data_ip": "127.0.0.92",
                    "tagged": False
                }
            ]
        }
    ]
    mgmt_ip: "10.18.171.96"

  tasks:

      # if state is create, then create Network config, fails if it exist or cannot create
      # if state is present, then create Network config if not present ,else success
    - name: Create Network config. Should fail with ex 'SM_array_not_found'
      hpe_nimble_network:
        host: "{{ host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ name }}"
        route: "{{ route }}"
        subnet: "{{ subnet }}"
        array: "{{ array }}"
        iscsi_automatic_connection_method: true
        iscsi_connection_rebalancing: False
        mgmt_ip: "{{ mgmt_ip }}"
        state: "{{ state | default('present') }}"
      register: output
      failed_when: "'SM_array_not_found' not in output.msg"

    # delete the Network config
    - name: Delete Network config. Should fail with 'Network config 'draft' cannot be deleted as it is not present'
      hpe_nimble_network:
        host: "{{ host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ name }}"
        state: "absent"
      register: output
      failed_when: "'cannot be deleted as it is not present' not in output.msg"

    - name: Validate Network config. Should fail with 'Network config 'draft' cannot be validated as it is not present'
      hpe_nimble_network:
        host: "{{ host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ name }}"
        state: "present"
        ignore_validation_mask: 1
        validate: true
      register: output
      failed_when: "'cannot be validated as it is not present' not in output.msg"

    - name: Activate Network config. Should fail with 'Network config 'draft' cannot be activated as it is not present'
      hpe_nimble_network:
        host: "{{ host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ name }}"
        state: "present"
        ignore_validation_mask: 1
        activate: true
      register: output
      failed_when: "'cannot be activated as it is not present' not in output.msg"