---
- hosts: "localhost"
  gather_facts: true
  #debugger: always
  vars:
    # we should always use python3
    ansible_python_interpreter: /usr/bin/python3

  tasks:

    # - name: Dump
    #   run_once: true
    #   copy:
    #    content: "{{ hostvars[inventory_hostname] | to_nice_json }}"
    #    dest: /tmp/setup-dump.json

    - name: Load Storage System Vars
      include_vars: 'properties/storage_system_properties.yml'
      tags:
        - create_vol
        - clone_vol
        - restore_vol
        - delete_vol
        - move_vol

    - name: Load Volume Vars
      include_vars: 'properties/volume_properties.yml'
      tags:
        - create_vol
        - clone_vol
        - restore_vol
        - delete_vol
        - move_vol


      # if state is create , then create a volume if not present. Fails if already present.
      # if state is "present", then create a volume if not present, But Success if it already exists
    - name: Create Volume if not present
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "{{ state | default('present') }}" # fail if exist
        size: "{{ size }}"
        limit_iops: "{{ limit_iops }}"
        limit_mbps: "{{ limit_mbps }}"
        force: "{{force | default(0)}}"
        metadata: "{{ metadata }}"
        description: "{{ description }}"
        volcoll: "{{ ansible_default_ipv4['address']}}-{{ volcoll }}"
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
      ignore_errors: yes
      tags:
         - create_vol
      register: output

    # - debug:
    #     var: output
    #   tags:
    #     - create_vol


    - name: Changing Volume to offline state
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: offline
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
      tags:
         - create_vol

    - name: Changing Volume to online state
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: online
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
      tags:
         - create_vol

    # - name: check whether mandatory varibales for clone task is provided
    #   raw: test -e /usr/bin/python3
    #   register: var_result
    #   when: parent_vol is defined
    #   tags:
    #     - clone_vol


    # Create a clone from the given snapshot name.
    # if snapshot name is not provided then create a snapshot of source volume
    # clone task should only run if parent_vol is specified.snapshot name is optional
    - name: Let's create or refresh a clone!
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ansible_default_ipv4['address']}}-{{ cloned_vol | mandatory}}" # name here is the name of cloned volume
        # parent volume to clone from
        parent_vol: "{{ansible_default_ipv4['address']}}-{{ parent_vol }}" # do we neeed the source vol if snapshot is provided?
        snapshot: "{{ snapshot | default(None)}}"
        state: "{{ state | default('present') }}" # fail if exist
      ignore_errors: yes
      when:
        - parent_vol is defined
      tags:
        - clone_vol

    # if no snapshot is given then restore volume to last snapshot,fails if no snapshots exist
    # or if snapshot is provided then restore volume from that snapshot
    - name: Restore volume .
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
        snapshot: "{{ snapshot | default(None)}}"
        state: restore
      ignore_errors: yes
      tags:
        - restore_vol

    - name: Delete volume  (it's not offline)
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
        state: absent
      ignore_errors: yes
      tags:
        - delete_vol

    - name: Move Volume to pool
      hpe_nimble_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        move: true
        name: "{{ansible_default_ipv4['address']}}-{{ name }}"
        state: present
        dest_pool_name: "{{ dest_pool_name | mandatory }}"
      ignore_errors: yes
      tags:
         - move_vol


